View = require 'views/base/view'
list_view_a = require 'views/templates/list_view_a'

module.exports = class OfferListView extends View
    autoRender: true
    container: "[data-role='content']"
    containerMethod: 'html'
    #attributes: { 'class':'ui-page' }
    initialize: (options) ->
        super
        @template = list_view_a
        @last_check_view = 'list_view_a'
        @last_check_query = 'user'

    initEvents: =>
        @delegate 'change', '#list_view_a', @change_list_view
        @delegate 'change', '#list_view_b', @change_list_view
        @delegate 'change', '#list_view_c', @change_list_view
        @delegate 'change', '#user', @change_query
        @delegate 'change', '#agency', @change_query
        @delegate 'change', '#all', @change_query
        @delegate 'click',  @click_ev

    change_list_view: (event) =>
        #NOTE: require might be a sorce of bugs as it async!!
        @template = require 'views/templates/' + event.target.id
        @render()
        @last_check_view = event.target.id
        @refresh_radios()

    refresh_radios: =>
        #refresh all radio buttons
        @$el.find("[name='radio-choice1']").removeAttr('checked')
        @$el.find('#'+ @last_check_view).attr('checked','True')
        @$el.find("[name='radio-choice1']").checkboxradio('refresh')
        @$el.find("[name='radio-choice2']").removeAttr('checked')
        @$el.find('#'+ @last_check_query).attr('checked','True')
        @$el.find("[name='radio-choice2']").checkboxradio('refresh')

    change_query: (event) =>
        console.log(event)
        @params = {'filter': event.target.id }
        @collection.fetch
            data: @params
            success: =>
                console.log(@params)
                @render()
                @last_check_query = event.target.id
                @refresh_radios()

    click_ev: ->
        console.log('click')

    getTemplateData: =>
        @collection.toJSON()

    attach: =>
        super
        console.log('view: offerlist afterRender()')
        @initEvents()
        @publishEvent 'offerlistview:render'








# -------------------------------------------------------------------------------------------
# @$el.find("[name='radio-choice1']").removeAttr('checked')
# #@$el.find('#'+ @template_name).attr('checked','True')
# @$el.find("[name='radio-choice1']").checkboxradio('refresh')
# @$el.find("[name='radio-choice2']").removeAttr('checked')
# #@$el.find('#'+ @params['qtype']).attr('checked','True')
# @$el.find("[name='radio-choice2']").checkboxradio('refresh')
#attributes: {
#  'data-role':'panel'
#  'data-position':'left'
#  'data-position-fixed':'true'
#  'data-dismissible':'false'
#  'data-display':'reveal'
#  'data-theme':'a'
#}
#container: "[data-role='page']"
#id: 'main-menu'
#template: template
#afterRender: =>
#  super
#  @publishEvent 'menu:render'
#  #console.log(@el.childNodes)
#  #@$el.trigger('pagecreate')
#  #@$el.find('#main-menu').panel('open')






#console.log(@$el)
#console.log(@$("[data-role='page']"))
#@$el.find("[data-role='page']").trigger('pagecreate')
#@$("[data-role='page']").trigger('pagecreate')
#_.defer => @$("[data-role='page']").trigger('pagecreate')
