View = require 'views/base/view'
template = require 'views/templates/base_structure'
mediator = require 'mediator'
FooterView = require 'views/footer-view'

module.exports = class StructureView extends View
    autoRender: true
    container: "body"
    containerMethod: 'html'
    id: 'main-container'
    template: template
    template_name: 'base_structure'
    footer: 'base_footer'
    pages: 1

    initialize: ->
        super
        @template = template
        mediator.subscribe 'view:init', @structure_change

    structure_change:(options) =>
        if _.isEqual(mediator.t_conf, mediator.prev_t_conf)
            console.log('obj are equal so we will do noting')
            return
        else
            @publishEvent('log:info', 'doing some logic to figure out what is changed and rerender this')
            if mediator.t_conf.footer != mediator.prev_t_conf.footer
                # footer needs 2b refreshed by trigger(pagecreate) .....
                @footer = mediator.t_conf.footer
                @subview 'footer' , new FooterView {footer: @footer}
                @subview('footer').render()
                @set_mediator()
                @publishEvent 'structureView:render'
                #@render()

    set_mediator: =>
        mediator.prev_t_conf =
            content:    @template_name
            footer:     @footer
            nr_pages:   @pages

    render: =>
        super

    attach: =>
        super
        @publishEvent('log:info', 'structureView: attach()')
        @subview 'footer' , new FooterView {footer: @footer}
        @subview('footer').render()
        @publishEvent 'structureView:render'
        @set_mediator()


